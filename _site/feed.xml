<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julias Design Apprenticeship Blog</title>
    <description>This blog contains Julia Murrays learnings during her Design Apprenticeship at 8th Light.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 01 Oct 2018 10:39:05 -0500</pubDate>
    <lastBuildDate>Mon, 01 Oct 2018 10:39:05 -0500</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>Git for Humans</title>
        <description>&lt;header&gt;
  &lt;h2&gt;Git for Humans&lt;/h2&gt;
&lt;/header&gt;

&lt;section&gt;
  &lt;p&gt;
    Iâ€™m only about 2 weeks into my apprenticeship as well as my introduction to Git and Github. So far I'd like to say one thing:
    Git makes me feel really dumb. Going through some of these concepts makes me feel like I am literally re-wiring my
    brain, but some of the wires aren't connecting. One of my first steps of being not dumb at Git has been to read
    &lt;cite&gt;Git for Humans&lt;/cite&gt; by David Demaree. Overall it was a really helpful book, but mostly due to the subject matter,
    it wasn't exactly a page turner. Next I'll go through the general concepts from the book, explain them with brief command
    examples.
  &lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Version Control&lt;/h3&gt;
  &lt;p&gt;
    Overall, I understand the need for version control software, especially for larger companies with multiple people working
    on different design iterations of the same site or application. As a designer one of my pet peeves is to have a work folder
    with 20 different files with no specificity or naming convention, especially when you find out the file names have nothing
    to do with the actual content in the file.
  &lt;/p&gt;
  &lt;br&gt;
&lt;h3&gt;The Command Line&lt;/h3&gt;
  &lt;p&gt;
    The command line makes me feel really dumb. As a designer, I think in terms of visually moving a thing to a things and
    seeing that thing happen makes me feel like there is some order to this crazy world. The command line turns my brain inside
    out and upside down and leaves me unsure about what reality really is. That being said, I feel like I am 20 times more
    comfortable with the command line than I did my first day.
  &lt;/p&gt;
  &lt;p&gt;
    The command line is essentially a non-graphical way to navigate through directories both locally on your computer and (I think)
    somehow, remotely find other directories other places, like Github. You as a user can type in commands into an program
    called Terminal, those commands will run, and sometimes, you will get a confirmation about the result of those commands.
    If you ever saw the 1995 movie Hackers, you may have a better understanding of what I'm talking about. If only we were
    cool enough to have nicknames like &quot;Zero Cool&quot; or &quot;Crash Override&quot;.
    &lt;/head&gt;
  &lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Start a New Project or Clone an Existing Project&lt;/h3&gt;
  &lt;p&gt;
    After initializing Github, you'll either need to create a new project or start on an exisitng project. In
    order to start a new project you first need to make a directory for it by sending the command:&lt;br&gt;
    &lt;code&gt;$: mkdir new-project&lt;/code&gt;.&lt;br&gt;
    This will make a new directory with a folder called &quot;new project&quot;. Next we need to change to that directory
    in order to start working in it:&lt;br&gt;
    &lt;code&gt;$: cd new:project&lt;/code&gt;&lt;br&gt;
    The last step in this step is to initiaize the repository&lt;br&gt;
    &lt;code&gt;$: git init&lt;/code&gt;&lt;br&gt;
  &lt;/p&gt;
  &lt;p&gt;
    More often than not, you'll be working on exisiting software that you need to make changes to. This means that
    you'll need to clone off of an existing repo. Cloning means that what gets saved in your local directory is an
    exact replica of the files on the server. You'll start out with the &lt;code&gt;git clone&lt;/code&gt; command which a real
    powerhouse command that does multiple things at once. It will create the new directory, initializes the new
    repository, adds an &lt;code&gt;origin&lt;/code&gt; remote while pulling changes from the it at the same time.
  &lt;/p&gt;
  &lt;br&gt;
&lt;h3&gt;Commiting to a Branch&lt;/h3&gt;
  &lt;p&gt;
    After you have your project set up in your directory, and you've made the changes in your code, you need to commit.
    A commit is essentially a stored version of the project with your changes in it, but separate because it hasnt been
    merged with what is live. This book refers to it as an object, which is a strange and overly vague term that that isn't
    really helpful. So I'll just call it an unmerged version. I'm not quite sure what the process is for 8th Light, but
    I assume as a design crafter I would commit my changes, have a code review and then they would be merged with the master
    branch.
  &lt;/p&gt;
  &lt;p&gt;
    Before you commit, you need to decide on a branch to commit it to. What is a branch exactly? To out it simple a branch
    is merely a label, saying this code is different from what is live and we categorize it by &quot;x&quot; branch. When starting a
    new project, Git creates a default branch and calls it master. In many cases master is what you will see live on the
    site, but not always, it depends on the company and their front end development process.
  &lt;p&gt;
  &lt;p&gt;
    In many cases you'll want to create a new branch. Git has separate commands for creating a new branch and checking
    it our (which moves you to it) but thats annoying. Great thing is theres a combination command that does both things
    at once:&lt;br&gt;
    &lt;code&gt; git checkout -b new-project&lt;/code&gt;. Once this is done you can confirm that you created and in the
    branch that you want by passing:&lt;br&gt;
    &lt;code&gt;$: git branch&lt;/code&gt;
    If everything is working correctly, you should recieve a message with a &lt;code&gt;*&lt;/code&gt; and the branch name you just made.
  &lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Merging&lt;/h3&gt;
  &lt;p&gt;
    So far you've created or modified a directory, made some changes to it and committed those changes to a branch within
    the repository. After reviewing your code to make sure everything is good, the next step would be to merge it with
    the masterbranch, or whichever branch you've decided the live site is pulling from. The first thing you do would be
    to checkout the master branch with &lt;code&gt;$: git checkout master&lt;/code&gt;. You'll then want to pull changes from the previous
    branch you were working on and merge them with master, so you'll pass along &lt;code&gt;$: git merge new-project&lt;/code&gt;.
  &lt;/p&gt;
  &lt;p&gt;
    There are two kinds of merges, fast forward and merge commits. Fast forwards are great, but only really work when one of the
    two branches you're merging has a new commit (this is usually the non-master one). Here, git moves the head of the master
    commit to the &quot;other&quot; one you just committed to. If you've got changes both in your master and your other branch, the
    best thing to do is a merge commit. With this, Git needs to create a combined snapshot of the changes in both branches
    and figure out what the new merge is going to look like. In order to do this it will find the first common ancestor
    in order to figure out what has changed and what hasn't. As long as both branches don't have changes in the same line,
    Git should be able to merge both branches successfully.
  &lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Remotes&lt;/h3&gt;
  &lt;p&gt;
    So far, many of the topics I've discussed work perfectly for someone working on a project locally on their compputer.
    One of the most powerful things about Git is that is allows multiple people from multiple locations in the world
    to collaborate on a project. This is where remotes come in. A remote repository is how a single person can access
    a directory that lives somewhere besides that persons local computer. Most of the itme, this is where Github comes
    in. While Git is the version control system, Github is a hosting service for Git repositories. Going back to one of
    the earier terms in this post, a remote is where you would clone your repository onto your local computer and make
    changes that would then be commited and merged into a branch.
  &lt;/p&gt;
  &lt;p&gt;
    Something you may have to do with remotes is make a remote an origin for our project. To do this, you pass along
    &lt;code&gt;
      (master) $: git remote add origin https://new-project.com
    &lt;/code&gt; &lt;br&gt;
    &lt;code&gt;git remote&lt;/code&gt; is a command with several sub-commands. The sub-commands for &lt;code&gt;git remote&lt;/code&gt;
    are &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt; among others.
  &lt;/p&gt;
  &lt;p&gt;
    Related to remotes is &lt;code&gt;git fetch&lt;/code&gt; whic allows you to work offline. It'll pull down a copy of every branch
    of a remote and it will allow you to commit changes and merge to a branch without having to be online.
  &lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;History&lt;/h3&gt;
  &lt;p&gt;
    For every commit that's made theres a history of it, which is a really powerful feature. You can even view the commit
    history even if you don't use Github as a hosting service. The first command you'll pass is &lt;code&gt;git log&lt;/code&gt;
    and in response you'll get a list of every commit for a project and will give you the commit id, author, date, and
    what the change was.
  &lt;/p&gt;
  &lt;p&gt;
    Most of the time seeing every commit that ever happened isn't the most useful thing, but Git
    has a solution for that. You can add on a format string, which is just an addition to the &lt;code&gt;git log&lt;/code&gt;
    command. The format string &lt;code&gt;--pretty=oneline&lt;/code&gt; will only show the commit id and commit message in a single line.
    Another helpful command is that you can choose to view your commit history in a range format. For this your
    reference points are two commit references to see what happened between then in a start and end format:&lt;br&gt;
    &lt;code&gt;$: git log --oneline master..new-homepage&lt;/code&gt;&lt;br&gt;
    The &lt;code&gt;..&lt;/code&gt;separates the start and end branch and returns with the history wihtin those ranges for you.
  &lt;/p&gt;
  &lt;p&gt;
    You can also filter your commit history by recency, date range, or by author. You can do this by passing along:&lt;br&gt;
    &lt;code&gt;$: git log --author=Murray --grep=cats --oneline Gemfile&lt;/code&gt;&lt;br&gt;
    This is telling Git that you want to see a commit history for something authored by me, containing the words cats
    and changed the file called Gemfile.
  &lt;/p&gt;
&lt;/section&gt;
</description>
        <pubDate>Thu, 27 Sep 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/jekyll/update/2018/09/27/Git-for-Humans.html</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2018/09/27/Git-for-Humans.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Web Accessibility</title>
        <description>&lt;header&gt;
  &lt;h2&gt;What is Web Accessibility&lt;/h2&gt;
&lt;/header&gt;
&lt;br&gt;
    &lt;p&gt;
      Web accessibility is the practice of building (design and developing) websites and other digital products so that users of
      all abilities can access them. The Web Content Accessibility Guidelines (WCAG) provides a standard on how to do this and
      provides a success criteria of A, AA, and AAA. A success criteria is essentially a measure for the level of complaiance
      a website or application holds itself to.
    &lt;/p&gt;
    &lt;br&gt;
      &lt;h3&gt;Inaccessible websites create barriers for users who are/have:&lt;/h3&gt;
      &lt;ul&gt;
        &lt;li&gt;
        Blind or low vision
        &lt;/li&gt;
        &lt;li&gt;
        Deaf or Hearing Impaired
        &lt;/li&gt;
        &lt;li&gt;
        Cognitative disabilities
        &lt;/uli&gt;
        &lt;li&gt;
        Limited motor skills
        &lt;/li&gt;
      &lt;/ul&gt;
      &lt;br&gt;
    &lt;h3&gt;Why Should We Care?&lt;/h3&gt;
    &lt;p&gt;
      Often times companies brush of accessibility as unnecessary. Remarks such as &quot;Those arent our users&quot; and &quot;We've always
      done it this way&quot; are common rationals for keeping up with the status quo. In a perfect world we should all genuinely
      care about all users, including those with disabilities. Fortunately, there are several benefits to accessibility
      besides that fuzzy feeling you get when you're a decent human being.
    &lt;/p&gt;
    &lt;p&gt;
      To put it simply: accessibilty means good business. For example, if a site uses proper things like image alt attributes,
      title and header tags and html semantic markup, it returns better SEO results. Another factor is that most people
      at some point in their lives experience become disabled, even temporarily. Often times, most people
      will have difficulty viewing screens after lasik eye surgery. Broswer features like high contrast mode allow users to
      view screens with less strain on their eyes. Lastly, designing for accessibility safeguards your client against legal
      ramifications for non-complaince. If your client works in areas of the government, healthcare or airlines they are
      are most likely legally bound to adhere to WCAG. Even if they are outside these industries, they are still vulnerable
      to lawsuits. &lt;a href=&quot;https://www.boia.org/blog/2018s-flood-of-accessibility-lawsuits&quot;&gt;Among others in 2018&lt;/a&gt;, giants like
      Amazon and Nike have come under attack for non-compliance.
      &lt;/table&gt;
    &lt;/p&gt;
    &lt;br&gt;

    &lt;h3&gt;Start by Starting&lt;/h3&gt;
    &lt;p&gt;
      Creating and implementing accessible digital products has 3 contributing parties: design (UX/visual), development and
      business. If you and/or your company is new to web accessibility, it can seem pretty intimidating to start. As a designer,
      your advantage is that you have influence from the very begining on implementing accessibity into your digital product.
      Up next well go through some very easy steps in order to start designing for accessibility and its benefits.
    &lt;/p&gt;

    &lt;h3&gt;1). Make sure your colors meet contrast ratios&lt;/h3&gt;
      &lt;p&gt; One of the first things a designer can to to ensure for accessibility is to make sure their designs meet the
          correct color contrast ratio. The most recent guidelines just came out, 2.1 and with that comes some additional
          requirements from the previous 2.0.
      &lt;/p&gt;
      &lt;h4&gt;2.0: Text and Background Color:&lt;/h4&gt;
      &lt;p&gt;
        Previously, the only thing color contrast applied to was text and background color. Level AA requires a contrast
        ratio of at least 4.5:1 for normal text and 3:1 for large text. Level AAA requires a contrast ratio of at least
        7:1 for normal text and 4.5:1 for large text.
      &lt;/p&gt;
      &lt;h4&gt;2.1: Images and UI Elements:&lt;/h4&gt;
      &lt;p&gt;
        In the case that a graphic is essential for understanding content or functionality on website, the contrast ratio
        of at least 4.5:1 against the surrounding colors. This isnt a hard and fast rule though, as there are some exceptions.
        Any graphic that has a minimum height and width of 3px as well as logo types or anything that is non-essential is excluded.
      &lt;/p&gt;
      &lt;p&gt;UI elements are also required to meet contrast standards in 2.1. Any UI elemenet deemed essential
        to understand content functionality must meet a contrast ratio of 4.5:1 against the surrounding colors. Exceptions for This
        include elements with a minimum of 3px must meet a contrast ratio of 3:1. Disbaled or inactive UI elements are also
        exempt from this guideline.
      &lt;/p&gt;
      &lt;p&gt; Caluculating these contrast ratios seems like a really tedious task, but it's not! There are a lot of great resources out
        there but here are the two main ones I use in my workflow:
        &lt;br&gt;
        &lt;ul&gt;
          &lt;li&gt;
              &lt;a href=&quot;http://contrast-finder.tanaguru.com/&quot;&gt;
                Tanaguru contrast checker
              &lt;/a&gt;
              is one of my favorite web-based tools for this. It not only allows you to choose between contrast ratios, it also
              offers suggestions for similar colors if your combination doesn't meet the ratio you need.
          &lt;/li&gt;
          &lt;li&gt;
            &lt;a href=&quot;http://www.getstark.co/&quot;&gt;
              Stark sketch plugin
            &lt;/a&gt;
            is a way to check your contrast ratios right within Sketch. One of the cool things about this one is that
            you can also test your color combinations against the many types of color blindess (yes, there are several types).
          &lt;/li&gt;
        &lt;/ul&gt;



    &lt;h3&gt;2). Donâ€™t use color alone to communicate&lt;/h3&gt;
    &lt;p&gt;
      While we are on the subject of color blindness, we also need to make sure that color is not an essential communicator
      of content or functionality. This mainly pertains to forms and error states. If an error is communicated to a color
      blind user only by the use of red text, there really is no way for them to know where that error is in the page.
      Many accessible websites will use the &lt;span&gt;&amp;#9888;&lt;/span&gt; warning symbol along with red text to communicate than
      and error has occured.
    &lt;/p&gt;
    &lt;p&gt;
      One of my favorite games is Dots , a silly phone game that releases serotonin in your brain when you connect
      colored dots together. The game does have a great color blind mode where each dot has a shape inside it that corresponds
      to its color. A medium article written by &lt;a href=&quot;https://medium.com/intrepid-s-insights/designing-for-and-with-color-blindness-48392aab3d87&quot;&gt;color blind designer, Aaron Tenbuuren&lt;/a&gt;
      goes into detail about how Dots and other apps design for color blind users successfully.
    &lt;/p&gt;

    &lt;h3&gt;3.) Design focus states for all ui components and allow for keyboard navigation&lt;/h3&gt;
    &lt;p&gt;
    As a someone who doesn't use accessibility features on devices, I definately have a bias towards navigating
    with a mouse or trackpad over a keyboard or other assistive devices. Many different types of users will use
    non-mouse devices including blind users who use screen readers. People with MS or arthritis will use the keyboard
    because using a mouse is often painful and difficult. Power users of complex forms also use keyboard naviagtion
    simply because its a more efficient than clicking into each and every element. Regardless of a users ability or
    behavior, allowing for keyboard navigation requires considering what all the different states of a form element
    will look like. States include disabled, deafult, active and focus. The focus state is especially helpful because
    it communicates to users what part of the website they are currently on. One of my favorite resources for this
    is the &lt;a href=&quot;https://designsystem.digital.gov/components/form-controls/&quot;&gt;U.S. Web Design Standards&lt;/a&gt;,
    which is an open source design system used by all U.S. federal websites.
    &lt;/p&gt;

    &lt;h3&gt;4). Use alt text for non-text components&lt;/h3&gt;
      &lt;p&gt;
        For people that use screen readers to read written conenet also need access to non-written content. This includes
        maps, graphics, photos, animations and video. In order to do this alt tags are added in HTML to include a short
        message of what the non-text content is about. Although this is something done mostly during front end development,
        as designers we not only design the UI, but we also design and shape the content. It's important to craft image
        descriptions to give the same context for both sighted and non sighted users.
        &lt;a href=&quot;https://www.microsoft.com/design/inclusive/&quot;&gt;Microsoft design&lt;/a&gt; has a series of videos
        about the power of inclusive design that has great voice over descriptions of what is happening in the video. These
        not only give context to the videos, but they add value for all users.
      &lt;/p&gt;


    &lt;h3&gt;5). Use proper headings with HTML semantic markup&lt;/h3&gt;
    &lt;p&gt;
      Another practice that makes sure users who with screen readers can easily navigate through a websites content is
      by using proper HTML mark up for headings. Doing this the screen reader reads each header to the user as they
      go through the content on the page from top to bottom. It will tell the user what is a header and what is paragraph
      content. It also allows the user to easily and quickly jump through content, by listing out the headings from h1 to
      h6 so they can be used as a table of contents. Although writing this code is a part of front end development, you need
      to establish the type heirarchy first. An easy way to figure out your type sizes, I reccomend using
      &lt;a href=&quot;https://type-scale.com/&quot;&gt;type scale&lt;/a&gt;&quot;, a web based tools that sets heirarchy based on a different set of
      ratios.
    &lt;/p&gt;
</description>
        <pubDate>Wed, 26 Sep 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/blog/post/2018/09/26/accessibility.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/post/2018/09/26/accessibility.html</guid>
        
        
        <category>blog</category>
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>CSS Positioning</title>
        <description>&lt;header&gt;
  &lt;h1&gt;CSS Positioning&lt;/h1&gt;
&lt;/header&gt;
&lt;br&gt;

    &lt;p&gt;
    The &lt;code&gt;position&lt;/code&gt; property specifies the type of positioning method used for an element. The position
    types are &lt;code&gt;static&lt;/code&gt; &lt;code&gt;relative&lt;/code&gt; &lt;code&gt;fixed&lt;/code&gt; &lt;code&gt;absolute&lt;/code&gt; and &lt;code&gt;sticky.&lt;/code&gt;&lt;br&gt;
    &lt;/p&gt;
&lt;div class =&quot;positions&quot;&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;h2&gt;Static&lt;/h2&gt;
    &lt;p&gt;
    HTML elements are positioned &lt;code&gt;static&lt;/code&gt; by default. Static positioned elements are not affected by the &lt;code&gt;top&lt;/code&gt;
    &lt;code&gt;bottom&lt;/code&gt; &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; properties. An element with position: &lt;code&gt;static&lt;/code&gt; is
    not positioned in any special way; it is always positioned according to the normal flow of the page:
    &lt;/p&gt;
      &lt;code&gt;
        .static&lt;br&gt;
        {&lt;br&gt;
        width: 100px;&lt;br&gt;
        height: 100px;&lt;br&gt;
        background-color: #ff6a6a;&lt;br&gt;
        float: left;&lt;br&gt;
        &lt;span style=&quot;color:red&quot;&gt;position: static;&lt;/span&gt;&lt;br&gt;
        }&lt;br&gt;
      &lt;/code&gt;

      &lt;div class=&quot;static1&quot;&gt;static&lt;/div&gt;
      &lt;div class=&quot;middle&quot;&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;h2&gt;Relative&lt;/h2&gt;
    &lt;p&gt;
    An element with &lt;code&gt;position: relative;&lt;/code&gt; is positioned relative to its normal position. Setting the &lt;code&gt;top&lt;/code&gt;
    &lt;code&gt;right&lt;/code&gt; &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; properties of a relatively-positioned element will cause
    it to be adjusted away from its normal position. Other content will not be adjusted to fit into any gap left by the element.
    &lt;/p&gt;

    &lt;code&gt;
    .relative&lt;br&gt;
      {&lt;br&gt;
      width: 100px;&lt;br&gt;
      height: 100px;&lt;br&gt;
      background-color: #ff6a6a;&lt;br&gt;
      float: left;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;position: relative;&lt;/span&gt;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;left: 30px;&lt;/span&gt;&lt;br&gt;
      }&lt;br&gt;
    &lt;/code&gt;

    &lt;div class=&quot;relative1&quot;&gt;relative&lt;/div&gt;
    &lt;div class=&quot;middle&quot;&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;h2&gt;Fixed&lt;/h2&gt;
  &lt;p&gt;
    An element with &lt;code&gt;position: fixed;&lt;/code&gt; is positioned relative to the viewport, which means it always stays in the
    same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.
    A fixed element does not leave a gap in the page where it would normally have been located.
  &lt;/p&gt;

  &lt;code&gt;
    .fixed&lt;br&gt;
      {&lt;br&gt;
      width: 100px;&lt;br&gt;
      height: 100px;&lt;br&gt;
      background-color: #ff6a6a;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;position: fixed;&lt;/span&gt;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;bottom: 0;&lt;/span&gt;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;right: 0;&lt;/span&gt;&lt;br&gt;
      }&lt;br&gt;
  &lt;/code&gt;

  &lt;div class=&quot;fixed1&quot;&gt;fixed&lt;/div&gt;
  &lt;div class=&quot;middle&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;h2&gt;Sticky&lt;/h2&gt;
  &lt;p&gt;
  An element with &lt;code&gt;position: sticky;&lt;/code&gt; is positioned based on the user's scroll position. A sticky element toggles
  between relative and fixed, depending on the scroll position. It is positioned &lt;code&gt;relative&lt;/code&gt; until a given offset
  position is met in the viewport - then it &quot;sticks&quot; in place (like position:fixed).
  &lt;/p&gt;

  &lt;code&gt;
    .sticky&lt;br&gt;
    {&lt;br&gt;
    width: 200px; &lt;br&gt;
    height: 200px;&lt;br&gt;
    background-color: #FFB9B9;&lt;br&gt;
    &lt;span style=&quot;color:red&quot;&gt;position: sticky;&lt;/span&gt;&lt;br&gt;
    &lt;span style=&quot;color:red&quot;&gt;position: -webkit-sticky;&lt;/span&gt;&lt;br&gt;
    &lt;span style=&quot;color:red&quot;&gt;top: 0;&lt;/span&gt;&lt;br&gt;
    }&lt;br&gt;
  &lt;/code&gt;

  &lt;div class=&quot;sticky&quot;&gt;sticky
    &lt;img src= &quot;/images/sticky.svg.png&quot; width=&quot;200&quot; alt=&quot;example of sticky css positioning&quot;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;content&quot;&gt;
&lt;h2&gt;Absolute&lt;/h2&gt;
  &lt;p&gt;
    An element with &lt;code&gt;position: absolute;&lt;/code&gt; is positioned relative to the nearest positioned ancestor
    (instead of positioned relative to the viewport, like fixed). However; if an absolute positioned element has no
    positioned ancestors, it uses the document body, and moves along with page scrolling.
  &lt;/p&gt;

  &lt;code&gt;
    .absolute1&lt;br&gt;
    {&lt;br&gt;
      width: 100px;&lt;br&gt;
      height: 100px;&lt;br&gt;
      background-color: #ff6a6a;&lt;br&gt;
      float: left;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;position: relative;&lt;/span&gt;&lt;br&gt;
    }&lt;br&gt;
  &lt;/code&gt;

  &lt;code&gt;
    .absolute2&lt;br&gt;
    {&lt;br&gt;
      width: 100px;&lt;br&gt;
      height: 100px;&lt;br&gt;
      background-color: #ff6a6a;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;position: absolute;&lt;/span&gt;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;top: 2300px;&lt;/span&gt;&lt;br&gt;
      &lt;span style=&quot;color:red&quot;&gt;right: 300;&lt;/span&gt;&lt;br&gt;
    }&lt;br&gt;
  &lt;/code&gt;

  &lt;div class=&quot;absolute1&quot;&gt;relative&lt;/div&gt;
  &lt;div class=&quot;absolute2&quot;&gt;absolute&lt;/div&gt;

&lt;/div&gt;

&lt;div class=&quot;content&quot;&gt;
    &lt;h3&gt;Z Index&lt;/h3&gt;
    &lt;p&gt;
    When elements are positioned, they can overlap other elements. The &lt;code&gt;z-index&lt;/code&gt; property specifies the stack order
    of an element (which element should be placed in front of, or behind, the others). An element can have a positive or
    negative stack order.
    &lt;/p&gt;

    &lt;code&gt;
      .zindex&lt;br&gt;
      {&lt;br&gt;
        width: 100px;&lt;br&gt;
        height: 100px;&lt;br&gt;
        background-color: #ff6a6a;&lt;br&gt;
        float: left;&lt;br&gt;
        &lt;span style=&quot;color:red&quot;&gt;position: absolute;&lt;/span&gt;&lt;br&gt;
        &lt;span style=&quot;color:red&quot;&gt;pleft: 50px;&lt;/span&gt;&lt;br&gt;
        &lt;span style=&quot;color:red&quot;&gt;top: 2800px;&lt;/span&gt;&lt;br&gt;
        &lt;span style=&quot;color:red&quot;&gt;z-index: 1;&lt;/span&gt;&lt;br&gt;
      }&lt;br&gt;
    &lt;/code&gt;

  &lt;div class=&quot;zindex1&quot;&gt;z-index&lt;/div&gt;
  &lt;div class=&quot;middle&quot;&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 25 Sep 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/blog/post/2018/09/25/css-positioning.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/post/2018/09/25/css-positioning.html</guid>
        
        
        <category>blog</category>
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>HTML Elements</title>
        <description>&lt;header&gt;
  &lt;h1&gt;HTML Elements&lt;/h1&gt;
&lt;/header&gt;

&lt;section&gt;
&lt;h3&gt;Metadata Content&lt;/h3&gt;
  &lt;code&gt;base&lt;/code&gt;
    Determines the base url for all links. When a link goes off to an external site this element has to appear before it.&lt;br&gt;
  &lt;code&gt;link&lt;/code&gt;
    Used to connect a document to an external resource such as external stylesheets.&lt;br&gt;
  &lt;code&gt;meta&lt;/code&gt;
    Specifies all the metadata within the html document, like author, description or keywords.
    This information is not visible on the page.&lt;br&gt;
  &lt;code&gt;noscript&lt;/code&gt;
    If there are disabled scripts or issues with browser support &lt;code&gt;noscript&lt;/code&gt; allows for alternate content.
    It can be used in the &lt;code&gt;body&lt;/code&gt; and the &lt;code&gt;head&lt;/code&gt;. If in the &lt;code&gt;head&lt;/code&gt;
    elements are limited to &lt;code&gt;link&lt;/code&gt; &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt;.&lt;br&gt;
  &lt;code&gt;script&lt;/code&gt;
    Where scripts instructions are kept or link to external ones. Used to dynamically create block and/or
    inline content&lt;br&gt;
  &lt;code&gt;style&lt;/code&gt;
    Defines style info in the document and specifies how different elements should be styled.&lt;br&gt;
  &lt;code&gt;title&lt;/code&gt;
    title of a document, specified in the &lt;code&gt;head&lt;/code&gt; section in an html document. The content entered
    here appears in the browser toolbar, creates a title when the page is added to favorites and displays a title
    in search engine results. &lt;br&gt;

&lt;h3&gt;Flow Content&lt;/h3&gt;
  &lt;code&gt;a&lt;/code&gt;
    Defines something as a hyperlink; an interactive element that will take the user to another page.&lt;br&gt;
  &lt;code&gt;abbr&lt;/code&gt;
    Defines something as an abbreviation or an acronym&lt;br&gt;
  &lt;code&gt;address&lt;/code&gt;
    Contact info for the owner of a document&lt;br&gt;
  &lt;code&gt;article&lt;/code&gt;
    Defines an article in the document which could be a blog post, news story, comment, etc.&lt;br&gt;
  &lt;code&gt;aside&lt;/code&gt;
    Defines content aside from main content. Aside content should still be related to the main content.&lt;br&gt;
  &lt;code&gt;audio&lt;/code&gt;
    Defines audio content in the document. It accepts .mp3, .wav and .ogg&lt;br&gt;
  &lt;code&gt;b&lt;/code&gt;
    Styles text within the html to be bold.&lt;br&gt;
  &lt;code&gt;bdi&lt;/code&gt;
    Stands for bidirectional isolation. This is to take specific text and change the directionality from the direction of the text around it.&lt;br&gt;
  &lt;code&gt;bdo&lt;/code&gt;
    Overrides the text direction of the entire document.&lt;br&gt;
  &lt;code&gt;blockquote&lt;/code&gt;
    Will define content quoted from another source, and is usually indented.&lt;br&gt;
  &lt;code&gt;br&lt;/code&gt;
    Creates a break in a line of text. Itâ€™s an empty tag, so there is no closing tag.&lt;br&gt;
  &lt;code&gt;button&lt;/code&gt;
    Defines a clickable button. This can contain text or an image.&lt;br&gt;
  &lt;code&gt;canvas&lt;/code&gt;
    Is used as a container to draw graphics via a script in javascript. This is just a container, the ability to draw is in the javascript.&lt;br&gt;
  &lt;code&gt;cite&lt;/code&gt;
    Defines the title of work in art, literature, film, theater, etc.&lt;br&gt;
  &lt;code&gt;code&lt;/code&gt;
    Defines a piece of computer code.&lt;br&gt;
  &lt;code&gt;data&gt;&lt;/code&gt;
    This allows content to be translated to a machine readable value and also provides for a browser rendering that can be consumed by users.&lt;br&gt;
  &lt;code&gt;datalist&lt;/code&gt;
    Provides a list of predefined for an &lt;code&gt;input&lt;/code&gt; element. This allows for autocomplete via a dropdown.&lt;br&gt;
  &lt;code&gt;del&lt;/code&gt;
    Text that has been deleted from a document.&lt;br&gt;
  &lt;code&gt;details&lt;/code&gt;
    Allows user to show/hide details about something. The default of &lt;code&gt;details&lt;/code&gt; should be hidden unless the attribute is set to open.&lt;br&gt;
  &lt;code&gt;dfm&lt;/code&gt;
    Defines an instance of a term and is usually the first time the term is used in the document.&lt;br&gt;
  &lt;code&gt;div&lt;/code&gt;
    Creates a division within the html. Divs are used in css to style html or to do certain things in javascript.&lt;br&gt;
  &lt;code&gt;dl&lt;/code&gt;
    Description list, is used with &lt;code&gt;dd&lt;/code&gt; and &lt;code&gt;dt&lt;/code&gt;.&lt;br&gt;
  &lt;code&gt;dt&lt;/code&gt;
    Term/name description in a description list. Used with &lt;code&gt;dd&lt;/code&gt; and &lt;code&gt;dl&lt;/code&gt;.&lt;br&gt;
  &lt;code&gt;em&lt;/code&gt;
    Emphasized text.&lt;br&gt;
  &lt;code&gt;embed&lt;/code&gt;
    container for an external application or a plugin.&lt;br&gt;
  &lt;code&gt;fieldset&lt;/code&gt;
    used to group information within a form and creates a box around it.&lt;br&gt;
  &lt;code&gt;figure&lt;/code&gt;
    Specifies self contained content like an illustration, diagram, photos, etc.&lt;br&gt;
  &lt;code&gt;footer&lt;/code&gt;
    Footer of a document, has information itâ€™s containing content like author, related links, site map, contact info, etc.&lt;br&gt;
  &lt;code&gt;form&lt;/code&gt;
    creates an html form that the user can interact with and enter an input. &lt;code&gt;input&lt;/code&gt; &lt;code&gt;textarea&lt;/code&gt; &lt;code&gt;button&lt;/code&gt; &lt;code&gt;select&lt;/code&gt; &lt;code&gt;option&lt;/code&gt; &lt;code&gt;optgroup&lt;/code&gt; &lt;code&gt;fieldset&lt;/code&gt; &lt;code&gt;label&lt;/code&gt; can all be contained in a form. &lt;code&gt;h1&lt;/code&gt;  to &lt;code&gt;h6&lt;/code&gt; Define html headings. H1 has the most importance, H6 has the least importance.&lt;br&gt;
  &lt;code&gt;header&lt;/code&gt;
    Has introductory content and/or navigation. It can contain &lt;code&gt;h1&lt;/code&gt; to &lt;code&gt;h6&lt;/code&gt;, logo or authorship info.&lt;br&gt;
  &lt;code&gt;hr&lt;/code&gt;
    defines a thematic break in content and is often used to visually separate content.&lt;br&gt;
  &lt;code&gt;i&lt;/code&gt;
    Identifies a shift in mood or tone within a set of text. Indicates a technical term, ship name, thought in a foreign language, etc. This should be rarely used, other options are &lt;code&gt;em&lt;/code&gt; &lt;code&gt;strong&lt;/code&gt; &lt;code&gt;mark&lt;/code&gt; &lt;code&gt;cite&lt;/code&gt; &lt;code&gt;dfn&lt;/code&gt;&lt;br&gt;
  &lt;code&gt;iframe&lt;/code&gt;
    defines an inline frame and embeds another document within the html.&lt;br&gt;
  &lt;code&gt;img&lt;/code&gt;
    Defines an image within the document. Has 2 required attributes, src and alt.
    &lt;code&gt;img&lt;/code&gt; holds a space for the image. The actual image is linked to the document within
    &lt;code&gt;a&lt;/code&gt; tag.&lt;br&gt;
  &lt;code&gt;input&lt;/code&gt;
    Used within the &lt;code&gt;form&lt;/code&gt; element, this allows user to input data into the form.&lt;br&gt;
  &lt;code&gt;ins&lt;/code&gt;
    Defines text that has been inserted into a document.&lt;br&gt;
  &lt;code&gt;kpd&lt;/code&gt;
    defines a keyboard input and is a phrase tag. Can be achieved with CSS.&lt;br&gt;
  &lt;code&gt;label&lt;/code&gt;
    Defines a label for an input field.&lt;br&gt;
  &lt;code&gt;main&lt;/code&gt;
    Specifies the main content of a document. There can only be one &lt;code&gt;main&lt;/code&gt; element per document.&lt;br&gt;
  &lt;code&gt;map&lt;/code&gt;
    Creates an image map, which is an image with clickable areas. Contains multiple &lt;code&gt;area&lt;/code&gt; elements.&lt;br&gt;
  &lt;code&gt;mark&lt;/code&gt;
    Will define a section of text you want to mark and highlights it.&lt;br&gt;
  &lt;code&gt;math&lt;/code&gt;
    The top element in MathML, a mathematical markup language, used as an XML application.
  &lt;code&gt;meter&lt;/code&gt;
    Defines a scaled measurement like a gauge or fractional value. Examples are disk usage, query result, etc.&lt;br&gt;
  &lt;code&gt;nav&lt;/code&gt;
    defines a set of navigation links.&lt;br&gt;
  &lt;code&gt;noscript&lt;/code&gt;
    If there are disabled scripts or issues with browser support &lt;code&gt;noscript&lt;/code&gt; allows for alternate content. It can be used in the &lt;code&gt;body&lt;/code&gt; and the &lt;code&gt;head&lt;/code&gt;. If in the &lt;code&gt;head&lt;/code&gt; elements are limited to &lt;code&gt;link&lt;/code&gt; &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt;.&lt;br&gt;
  &lt;code&gt;object&lt;/code&gt;
    Identifies embedded objects in the document such as audio, video, javascript, pdf, other web pages, etc.&lt;br&gt;
  &lt;code&gt;ol&lt;/code&gt;
    specifies an ordered list and can be either numeric or alphabetical. Used with &lt;code&gt;li&lt;/code&gt;&lt;br&gt;
  &lt;code&gt;optgroup&lt;/code&gt;
    used to create groups of data in a dropdown list, each group with its own label.&lt;br&gt;
  &lt;code&gt;output&lt;/code&gt;
    Shows the result of a calculation that is run by a script.&lt;br&gt;
  &lt;code&gt;p&lt;/code&gt;
    Paragraph&lt;br&gt;
  &lt;code&gt;pre&lt;/code&gt;
    Preformatted text that preserved line breaks and spaces within the html.&lt;br&gt;
  &lt;code&gt;progress&lt;/code&gt;
    Shows the progress as a task.&lt;br&gt;
  &lt;code&gt;q&lt;/code&gt;
    Short quotation.&lt;br&gt;
  &lt;code&gt;ruby&lt;/code&gt;
    specifies a ruby annotation. Itâ€™s attached to the main text to indicate the pronunciation or meaning on the text. Used with east asian typography.&lt;br&gt;
  &lt;code&gt;s&lt;/code&gt;
    Indicates content is not longer accurate.&lt;br&gt;
  &lt;code&gt;samp&lt;/code&gt;
    Defines sample output from computer program.&lt;br&gt;
  &lt;code&gt;script&lt;/code&gt;
    Where scripts instructions are kept or link to external ones. Used to dynamically create block and/or inline content&lt;br&gt;
  &lt;code&gt;section&lt;/code&gt;
    defines sections of a document like chapters headers or footers.&lt;br&gt;
  &lt;code&gt;select&lt;/code&gt;
    creates a drop down list. Used with &lt;code&gt;option&lt;/code&gt;&lt;br&gt;
  &lt;code&gt;small&lt;/code&gt;
    Defines smaller text or side comments.&lt;br&gt;
  &lt;code&gt;span&lt;/code&gt;
    Used to ground inline elements in a document.&lt;br&gt;
  &lt;code&gt;strong&lt;/code&gt;
    is a phrase tag that emphasizes important text.&lt;br&gt;
  &lt;code&gt;sub&lt;/code&gt;
    Allows for subscript text which appears half a character below the baseline of text.&lt;br&gt;
  &lt;code&gt;sup&lt;/code&gt;
    Allows for subscript text which appears half a character above the baseline of text.&lt;br&gt;
  &lt;code&gt;svg&lt;/code&gt;
    container for svg graphics which has many ways of drawing shapes, lines and images.&lt;br&gt;
  &lt;code&gt;table&lt;/code&gt;
    Creates an HTML table that contains &lt;code&gt;tr&lt;/code&gt; &lt;code&gt;th&lt;/code&gt; and &lt;code&gt;td&lt;/code&gt; and can also be as complex to include &lt;caption&gt; &lt;col&gt; &lt;colgroup&gt; &lt;thread&gt; &lt;tfoot&gt; &lt;tbody&gt;
  &lt;code&gt;template&lt;/code&gt;
    Allows content to be hidden from the user, and it wonâ€™t be rendered in the browser.&lt;br&gt;
  &lt;code&gt;textarea&lt;/code&gt;
    creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
  &lt;code&gt;time&lt;/code&gt;
    human readable date or time. Can also encode dates/times in a machine readable way.&lt;br&gt;
  &lt;code&gt;ul&lt;/code&gt;
    defines an unordered, bulleted list. Each list item is defined by &lt;code&gt;li&lt;/code&gt;&lt;br&gt;
  &lt;code&gt;var&lt;/code&gt;
    phrase tage used to define a variable.&lt;br&gt;
  &lt;code&gt;video&lt;/code&gt;
    defines a video like a movie clip or video streaming. Files supported are .mp4, .ogg, .webm
  &lt;code&gt;wbr&lt;/code&gt;
    A position within text where the browser may optionally break a line, but not always at the location the element is in.
    &lt;br&gt;

&lt;h3&gt;Sectioning Content&lt;/h3&gt;
  &lt;code&gt;article&lt;/code&gt;
    Defines an article in the document which could be a blog post, news story, comment, etc.&lt;br&gt;
  &lt;code&gt;aside&lt;/code&gt;
    Defines content aside from main content. Aside content should still be related to the main content.&lt;br&gt;
  &lt;code&gt;footer&lt;/code&gt;
    Footer of a document, has information itâ€™s containing content like author, related links, site map, contact info, etc.&lt;br&gt;
  &lt;code&gt;header&lt;/code&gt;
    Has introductory content and/or navigation. It can contain &lt;code&gt;h1&lt;/code&gt; to &lt;code&gt;h6&lt;/code&gt;, logo or authorship info.&lt;br&gt;
  &lt;code&gt;nav&lt;/code&gt;
    defines a set of navigation links.&lt;br&gt;
  &lt;code&gt;section&lt;/code&gt;
    defines sections of a document like chapters headers or footers.&lt;br&gt;
    &lt;br&gt;

&lt;h3&gt;Heading Content&lt;/h3&gt;
  &lt;code&gt;h1&lt;/code&gt; &lt;code&gt;h2&lt;/code&gt; &lt;code&gt;h3&lt;/code&gt; &lt;code&gt;h4&lt;/code&gt; &lt;code&gt;h5&lt;/code&gt; &lt;code&gt;h6&lt;/code&gt;
    Six levels of section headings. &lt;code&gt;h1&lt;/code&gt; is the highest section level and &lt;code&gt;h6&lt;/code&gt; is the lowest..&lt;br&gt;
    &lt;br&gt;

&lt;h3&gt;Phrasing Content&lt;/h3&gt;
  &lt;code&gt;abbr&lt;/code&gt;
    Defines something as an abbreviation or an acronym&lt;br&gt;
  &lt;code&gt;audio&lt;/code&gt;
    Defines audio content in the document. It accepts .mp3, .wav and .ogg&lt;br&gt;
  &lt;code&gt;b&lt;/code&gt;
    Styles text within the html to be bold.&lt;br&gt;
  &lt;code&gt;bdo&lt;/code&gt;
    overrides the text direction of the entire document.&lt;br&gt;
  &lt;code&gt;br&lt;/code&gt;
    Creates a break in a line of text. Itâ€™s an empty tag, so there is no closing tag.&lt;br&gt;
  &lt;code&gt;button&lt;/code&gt;
    defines a clickable button. This can contain text or an image.&lt;br&gt;
  &lt;code&gt;canvas&lt;/code&gt;
    is used as a container to draw graphics via a script in javascript. This is just a container, the ability to draw is in the javascript.&lt;br&gt;
  &lt;code&gt;cite&lt;/code&gt;
    Defines the title of work in art, literature, film, theater, etc.&lt;br&gt;
  &lt;code&gt;code&lt;/code&gt;
    defines a piece of computer code.&lt;br&gt;
  &lt;code&gt;data&gt;&lt;/code&gt;
    This allows content to be translated to a machine readable value and also provides for a browser rendering that can be consumed by users.&lt;br&gt;
  &lt;code&gt;datalist&lt;/code&gt;
    provides a list of predefined for an &lt;code&gt;input&lt;/code&gt; element. This allows for autocomplete via a dropdown.&lt;br&gt;
  &lt;code&gt;dfn&lt;/code&gt;
    Defines an instance of a term and is usually the first time the term is used in the document.&lt;br&gt;
  &lt;code&gt;em&lt;/code&gt;
    emphasized text.&lt;br&gt;
  &lt;code&gt;embed&lt;/code&gt;
    container for an external application or a plugin.&lt;br&gt;
  &lt;code&gt;i&lt;/code&gt;
    Identifies a shift in mood or tone within a set of text. Indicates a technical term, ship name, thought in a foreign language, etc. This should be rarely used, other options are &lt;code&gt;em&lt;/code&gt; &lt;code&gt;strong&lt;/code&gt; &lt;code&gt;mark&lt;/code&gt; &lt;code&gt;cite&lt;/code&gt; &lt;code&gt;dfn&lt;/code&gt;&lt;br&gt;
  &lt;code&gt;iframe&lt;/code&gt;
    defines an inline frame and embeds another document within the html.&lt;br&gt;
  &lt;code&gt;img&lt;/code&gt;
    Defines an image within the document. Has 2 required attributes, src and alt. &lt;code&gt;img&lt;/code&gt; holds a space for the image. The actual image is linked to the document within &lt;code&gt;a&lt;/code&gt; tag.&lt;br&gt;
  &lt;code&gt;input&lt;/code&gt;
    Used within the &lt;code&gt;form&lt;/code&gt; element, this allows user to input data into the form.&lt;br&gt;
  &lt;code&gt;kbd&lt;/code&gt;
    defines a keyboard input and is a phrase tag. Can be achieved with CSS.&lt;br&gt;
  &lt;code&gt;label&lt;/code&gt;
    Defines a label for an input field.&lt;br&gt;
  &lt;code&gt;mark&lt;/code&gt;
    Will define a section of text you want to mark and highlights it.&lt;br&gt;
  &lt;code&gt;meter&lt;/code&gt;
    Defines a scaled measurement like a gauge or fractional value. Examples are disk usage, query result, etc.&lt;br&gt;
  &lt;code&gt;math&lt;/code&gt;
    The top element in MathML, a mathematical markup language, used as an XML application.
  &lt;code&gt;noscript&lt;/code&gt;
    If there are disabled scripts or issues with browser support &lt;code&gt;noscript&lt;/code&gt; allows for alternate content. It can be used in the &lt;code&gt;body&lt;/code&gt; and the &lt;code&gt;head&lt;/code&gt;. If in the &lt;code&gt;head&lt;/code&gt; elements are limited to &lt;code&gt;link&lt;/code&gt; &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt;.&lt;br&gt;
  &lt;code&gt;object&lt;/code&gt;
    Identifies embedded objects in the document such as audio, video, javascript, pdf, other web pages, etc.&lt;br&gt;
  &lt;code&gt;output&lt;/code&gt;
    Shows the result of a calculation that is run by a script.&lt;br&gt;
  &lt;code&gt;progress&lt;/code&gt;
    Shows the progress as a task.&lt;br&gt;
  &lt;code&gt;q&lt;/code&gt;
    Short quotation.&lt;br&gt;
  &lt;code&gt;small&lt;/code&gt;
    Defines smaller text or side comments.&lt;br&gt;
  &lt;code&gt;span&lt;/code&gt;
    Used to ground inline elements in a document.&lt;br&gt;
  &lt;code&gt;strong&lt;/code&gt;
    is a phrase tag that emphasizes important text.&lt;br&gt;
  &lt;code&gt;sub&lt;/code&gt;
    Allows for subscript text which appears half a character below the baseline of text.&lt;br&gt;
  &lt;code&gt;sup&lt;/code&gt;
    Allows for subscript text which appears half a character above the baseline of text.&lt;br&gt;
  &lt;code&gt;svg&lt;/code&gt;
    container for svg graphics which has many ways of drawing shapes, lines and images.&lt;br&gt;
  &lt;code&gt;textarea&lt;/code&gt; c
    reates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
  &lt;code&gt;time&lt;/code&gt;
    human readable date or time. Can also encode dates/times in a machine readable way.&lt;br&gt;
  &lt;code&gt;var&lt;/code&gt;
    phrase tage used to define a variable.&lt;br&gt;
  &lt;code&gt;video&lt;/code&gt;
    defines a video like a movie clip or video streaming. Files supported are .mp4, .ogg, .webm
  &lt;code&gt;wbr&lt;/code&gt;
    A position within text where the browser may optionally break a line, but not always at the location the element is in.
    &lt;br&gt;

&lt;h3&gt;Embedded Content&lt;/h3&gt;
  &lt;code&gt;audio&lt;/code&gt;
    Defines audio content in the document. It accepts .mp3, .wav and .ogg&lt;br&gt;
  &lt;code&gt;canvas&lt;/code&gt;
    is used as a container to draw graphics via a script in javascript. This is just a container, the ability to draw is in the javascript.&lt;br&gt;
  &lt;code&gt;embed&lt;/code&gt;
    container for an external application or a plugin.&lt;br&gt;
  &lt;code&gt;iframe&lt;/code&gt;
    defines an inline frame and embeds another document within the html.&lt;br&gt;
  &lt;code&gt;img&lt;/code&gt;
    Defines an image within the document. Has 2 required attributes, src and alt. &lt;code&gt;img&lt;/code&gt; holds a space for the image. The actual image is linked to the document within &lt;code&gt;a&lt;/code&gt; tag.&lt;br&gt;
  &lt;code&gt;math&lt;/code&gt;
    The top element in MathML, a mathematical markup language, used as an XML application.
  &lt;code&gt;object&lt;/code&gt;
    Identifies embedded objects in the document such as audio, video, javascript, pdf, other web pages, etc.&lt;br&gt;
  &lt;code&gt;svg&lt;/code&gt;
    container for svg graphics which has many ways of drawing shapes, lines and images.&lt;br&gt;
  &lt;code&gt;video&lt;/code&gt;
    defines a video like a movie clip or video streaming. Files supported are .mp4, .ogg, .webm
    &lt;br&gt;

&lt;h3&gt;Interactive Content&lt;/h3&gt;
  &lt;code&gt;a&lt;/code&gt;
    Defines something as a hyperlink; an interactive element that will take the user to another page.&lt;br&gt;
  &lt;code&gt;button&lt;/code&gt;
    defines a clickable button. This can contain text or an image.&lt;br&gt;
  &lt;code&gt;details&lt;/code&gt;
    Allows user to show/hide details about something. The default of &lt;code&gt;details&lt;/code&gt; should be hidden unless the attribute is set to open.&lt;br&gt;
  &lt;code&gt;embed&lt;/code&gt;
    container for an external application or a plugin.&lt;br&gt;
  &lt;code&gt;iframe&lt;/code&gt;
    defines an inline frame and embeds another document within the html.&lt;br&gt;
  &lt;code&gt;label&lt;/code&gt;
    Defines a label for an input field.&lt;br&gt;
  &lt;code&gt;select&lt;/code&gt;
    creates a drop down list. Used with &lt;code&gt;option&lt;/code&gt;&lt;br&gt;
  &lt;code&gt;textarea&lt;/code&gt;
    creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
    &lt;br&gt;

&lt;h3&gt;Form Associated Content&lt;/h3&gt;
&lt;h4&gt;Listed&lt;/h4&gt;
  &lt;code&gt;button&lt;/code&gt;
    defines a clickable button. This can contain text or an image.&lt;br&gt;
  &lt;code&gt;fieldset&lt;/code&gt;
    used to group information within a form and creates a box around it.&lt;br&gt;
  &lt;code&gt;input&lt;/code&gt;
    Used within the &lt;code&gt;form&lt;/code&gt; element, this allows user to input data into the form.&lt;br&gt;
  &lt;code&gt;object&lt;/code&gt;
    Identifies embedded objects in the document such as audio, video, javascript, pdf, other web pages, etc.&lt;br&gt;
  &lt;code&gt;output&lt;/code&gt;
    Shows the result of a calculation that is run by a script.&lt;br&gt;
  &lt;code&gt;select&lt;/code&gt;
    creates a drop down list.&lt;br&gt;
  &lt;code&gt;textarea&lt;/code&gt;
    creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
    &lt;br&gt;

&lt;h4&gt;Lableable&lt;/h4&gt;
  &lt;code&gt;button&lt;/code&gt;
    defines a clickable button. This can contain text or an image.&lt;br&gt;
  &lt;code&gt;input&lt;/code&gt;
    Used within the &lt;code&gt;form&lt;/code&gt; element, this allows user to input data into the form.&lt;br&gt;
  &lt;code&gt;label&lt;/code&gt;
    Defines a label for an input field.&lt;br&gt;
  &lt;code&gt;meter&lt;/code&gt;
    Defines a scaled measurement like a gauge or fractional value. Examples are disk usage, query result, etc.&lt;br&gt;
  &lt;code&gt;output&lt;/code&gt;
    Shows the result of a calculation that is run by a script.&lt;br&gt;
  &lt;code&gt;progress&lt;/code&gt;
    Shows the progress as a task.&lt;br&gt;
  &lt;code&gt;select&lt;/code&gt;
    creates a drop down list.&lt;br&gt;
  &lt;code&gt;textarea&lt;/code&gt;
    creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
    &lt;br&gt;

&lt;h4&gt;Submitable&lt;/h4&gt;
&lt;code&gt;button&lt;/code&gt;
  defines a clickable button. This can contain text or an image.&lt;br&gt;
&lt;code&gt;output&lt;/code&gt;
  Shows the result of a calculation that is run by a script.&lt;br&gt;
&lt;code&gt;select&lt;/code&gt;
  creates a drop down list.&lt;br&gt;
&lt;code&gt;textarea&lt;/code&gt;
  creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
  &lt;br&gt;

&lt;h4&gt;Resetable&lt;/h4&gt;
&lt;code&gt;input&lt;/code&gt;
  Used within the &lt;code&gt;form&lt;/code&gt; element, this allows user to input data into the form.&lt;br&gt;
&lt;code&gt;output&lt;/code&gt;
  Shows the result of a calculation that is run by a script.&lt;br&gt;
&lt;code&gt;select&lt;/code&gt;
  creates a drop down list.&lt;br&gt;
&lt;code&gt;textarea&lt;/code&gt;
  creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
  &lt;code&gt;button&lt;/code&gt;
    defines a clickable button. This can contain text or an image.&lt;br&gt;
  &lt;code&gt;fieldset&lt;/code&gt;
    used to group information within a form and creates a box around it.&lt;br&gt;
  &lt;code&gt;form&lt;/code&gt;
    creates an html form that the user can interact with and enter an input. &lt;code&gt;input&lt;/code&gt; &lt;code&gt;textarea&lt;/code&gt; &lt;code&gt;button&lt;/code&gt; &lt;code&gt;select&lt;/code&gt; &lt;code&gt;option&lt;/code&gt; &lt;code&gt;optgroup&lt;/code&gt; &lt;code&gt;fieldset&lt;/code&gt; &lt;code&gt;label&lt;/code&gt; can all be contained in a form. &lt;code&gt;h1&lt;/code&gt;  to &lt;code&gt;h6&lt;/code&gt; Define html headings. H1 has the most importance, H6 has the least importance.&lt;br&gt;
  &lt;code&gt;input&lt;/code&gt;
    Used within the &lt;code&gt;form&lt;/code&gt; element, this allows user to input data into the form.&lt;br&gt;
  &lt;code&gt;label&lt;/code&gt;
    Defines a label for an input field.&lt;br&gt;
  &lt;code&gt;meter&lt;/code&gt;
    Defines a scaled measurement like a gauge or fractional value. Examples are disk usage, query result, etc.&lt;br&gt;
  &lt;code&gt;object&lt;/code&gt;
    Identifies embedded objects in the document such as audio, video, javascript, pdf, other web pages, etc.&lt;br&gt;
  &lt;code&gt;output&lt;/code&gt;
    Shows the result of a calculation that is run by a script.&lt;br&gt;
  &lt;code&gt;progress&lt;/code&gt;
    Shows the progress as a task.&lt;br&gt;
  &lt;code&gt;select&lt;/code&gt;
    creates a drop down list. Used with &lt;code&gt;option&lt;/code&gt;&lt;br&gt;
  &lt;code&gt;textarea&lt;/code&gt;
    creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
&lt;br&gt;

&lt;details&gt;
  &lt;summary&gt;
      &lt;h3&gt;All Elements&lt;/h3&gt;
  &lt;/summary&gt;
&lt;code&gt;!--...--&lt;/code&gt; A way to make notes in the html without it affecting the actual document&lt;br&gt;
&lt;code&gt;!DOCTYPE&lt;/code&gt; Defines the doc type
&lt;code&gt;a&lt;/code&gt; Defines something as a hyperlink; an interactive element that will take the user to another page.&lt;br&gt;
&lt;code&gt;abbr&lt;/code&gt; Defines something as an abbreviation or an acronym&lt;br&gt;
&lt;code&gt;address&lt;/code&gt; Contact info for the owner of a document&lt;br&gt;
&lt;code&gt;area&lt;/code&gt; Defines area inside of an image map which has clickable area in it. Itâ€™s always contained within a map element.&lt;br&gt;
&lt;code&gt;article&lt;/code&gt; Defines an article in the document which could be a blog post, news story, comment, etc.&lt;br&gt;
&lt;code&gt;aside&lt;/code&gt; Defines content aside from main content. Aside content should still be related to the main content.&lt;br&gt;
&lt;code&gt;audio&lt;/code&gt; Defines audio content in the document. It accepts .mp3, .wav and .ogg&lt;br&gt;
&lt;code&gt;b&lt;/code&gt; Styles text within the html to be bold.&lt;br&gt;
&lt;code&gt;base&lt;/code&gt; Determines the base url for all links. When a link goes off to an external site this element has to appear before it.&lt;br&gt;
&lt;code&gt;bdi&lt;/code&gt; Stands for bidirectional isolation. This is to take specific text and change the directionality from the direction of the text around it.&lt;br&gt;
&lt;code&gt;bdo&lt;/code&gt; overrides the text direction of the entire document.&lt;br&gt;
&lt;code&gt;blockquote&lt;/code&gt; Will define content quoted from another source, and is usually indented.&lt;br&gt;
&lt;code&gt;body&lt;/code&gt; defines all the content within the html document. Everything in the body is visible to the user.&lt;br&gt;
&lt;code&gt;br&lt;/code&gt; Creates a break in a line of text. Itâ€™s an empty tag, so there is no closing tag.&lt;br&gt;
&lt;code&gt;button&lt;/code&gt; defines a clickable button. This can contain text or an image.&lt;br&gt;
&lt;code&gt;canvas&lt;/code&gt; is used as a container to draw graphics via a script in javascript. This is just a container, the ability to draw is in the javascript.&lt;br&gt;
&lt;code&gt;caption&lt;/code&gt; Lives within a &lt;code&gt;table&lt;/code&gt; and allows one caption per table.&lt;br&gt;
&lt;code&gt;cite&lt;/code&gt; Defines the title of work in art, literature, film, theater, etc.&lt;br&gt;
&lt;code&gt;code&lt;/code&gt; defines a piece of computer code.&lt;br&gt;
&lt;code&gt;col&lt;/code&gt; Defines properties of a column within a &lt;code&gt;colgroup&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;colgroup&lt;/code&gt; defines formatting multiple columns within a table. &lt;br&gt;
&lt;code&gt;data&gt;&lt;/code&gt;This allows content to be translated to a machine readable value and also provides for a browser rendering that can be consumed by users.&lt;br&gt;
&lt;code&gt;datalist&lt;/code&gt;provides a list of predefined for an &lt;code&gt;input&lt;/code&gt; element. This allows for autocomplete via a dropdown.&lt;br&gt;
&lt;code&gt;dd&lt;/code&gt; Allows for a term/name description list. It is used with &lt;code&gt;dl&lt;/code&gt; and &lt;code&gt;dt&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;del&lt;/code&gt; Text that has been deleted from a document.&lt;br&gt;
&lt;code&gt;details&lt;/code&gt; Allows user to show/hide details about something. The default of &lt;code&gt;details&lt;/code&gt; should be hidden unless the attribute is set to open.&lt;br&gt;
&lt;code&gt;dfm&lt;/code&gt; Defines an instance of a term and is usually the first time the term is used in the document.&lt;br&gt;
&lt;code&gt;dialog&lt;/code&gt; creates a dialog box, often used for pop ups or modals.&lt;br&gt;
&lt;code&gt;div&lt;/code&gt; creates a division within the html. Divs are used in css to style html or to do certain things in javascript.&lt;br&gt;
&lt;code&gt;dl&lt;/code&gt; Description list, is used with &lt;code&gt;dd&lt;/code&gt; and &lt;code&gt;dt&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;dt&lt;/code&gt; term/name description in a description list. Used with &lt;code&gt;dd&lt;/code&gt; and &lt;code&gt;dl&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;em&lt;/code&gt; emphasized text.&lt;br&gt;
&lt;code&gt;embed&lt;/code&gt; container for an external application or a plugin.&lt;br&gt;
&lt;code&gt;fieldset&lt;/code&gt; used to group information within a form and creates a box around it.&lt;br&gt;
&lt;code&gt;figcap&lt;/code&gt; Caption for a &lt;code&gt;figure&lt;/code&gt; element. Can be the first or last child of the element.&lt;br&gt;
&lt;code&gt;figure&lt;/code&gt; Specifies self contained content like an illustration, diagram, photos, etc.&lt;br&gt;
&lt;code&gt;footer&lt;/code&gt; Footer of a document, has information itâ€™s containing content like author, related links, site map, contact info, etc.&lt;br&gt;
&lt;code&gt;form&lt;/code&gt; creates an html form that the user can interact with and enter an input. &lt;code&gt;input&lt;/code&gt; &lt;code&gt;textarea&lt;/code&gt; &lt;code&gt;button&lt;/code&gt; &lt;code&gt;select&lt;/code&gt; &lt;code&gt;option&lt;/code&gt; &lt;code&gt;optgroup&lt;/code&gt; &lt;code&gt;fieldset&lt;/code&gt; &lt;code&gt;label&lt;/code&gt; can all be contained in a form. &lt;code&gt;h1&lt;/code&gt;  to &lt;code&gt;h6&lt;/code&gt; Define html headings. H1 has the most importance, H6 has the least importance.&lt;br&gt;
&lt;code&gt;head&lt;/code&gt; Where all the metadata and other processing info is kept. &lt;code&gt;title&lt;/code&gt; &lt;code&gt;style&lt;/code&gt; &lt;code&gt;head&lt;/code&gt; Where all the metadata and other processing info is kept. &lt;code&gt;title&lt;/code&gt; &lt;code&gt;base&lt;/code&gt; &lt;code&gt;link&lt;/code&gt; &lt;code&gt;meta&lt;/code&gt; &lt;code&gt;script&lt;/code&gt; &lt;code&gt;noscript&lt;/code&gt; can all go in the head.&lt;br&gt;
&lt;code&gt;link&lt;/code&gt; &lt;code&gt;meta&lt;/code&gt; &lt;code&gt;script&lt;/code&gt; &lt;code&gt;noscript&lt;/code&gt; can all go in the head.&lt;br&gt;
&lt;code&gt;header&lt;/code&gt; Has introductory content and/or navigation. It can contain &lt;code&gt;h1&lt;/code&gt; to &lt;code&gt;h6&lt;/code&gt;, logo or authorship info.&lt;br&gt;
&lt;code&gt;hr&lt;/code&gt; defines a thematic break in content and is often used to visually separate content.&lt;br&gt;
&lt;code&gt;html&lt;/code&gt; identifies the document as html and communicates it to the browser. It contains all html elements except &lt;code&gt;!DOCTYPE&lt;/code&gt;&lt;br&gt;
&lt;code&gt;i&lt;/code&gt; Identifies a shift in mood or tone within a set of text. Indicates a technical term, ship name, thought in a foreign language, etc. This should be rarely used, other options are &lt;code&gt;em&lt;/code&gt; &lt;code&gt;strong&lt;/code&gt; &lt;code&gt;mark&lt;/code&gt; &lt;code&gt;cite&lt;/code&gt; &lt;code&gt;dfn&lt;/code&gt;&lt;br&gt;
&lt;code&gt;iframe&lt;/code&gt; defines an inline frame and embeds another document within the html.&lt;br&gt;
&lt;code&gt;img&lt;/code&gt; Defines an image within the document. Has 2 required attributes, src and alt. &lt;code&gt;img&lt;/code&gt; holds a space for the image. The actual image is linked to the document within &lt;code&gt;a&lt;/code&gt; tag.&lt;br&gt;
&lt;code&gt;input&lt;/code&gt; Used within the &lt;code&gt;form&lt;/code&gt; element, this allows user to input data into the form.&lt;br&gt;
&lt;code&gt;ins&lt;/code&gt; Defines text that has been inserted into a document.&lt;br&gt;
&lt;code&gt;kpd&lt;/code&gt; defines a keyboard input and is a phrase tag. Can be achieved with CSS.&lt;br&gt;
&lt;code&gt;label&lt;/code&gt; Defines a label for an input field.&lt;br&gt;
&lt;code&gt;legend&lt;/code&gt; for a &lt;code&gt;fieldset&lt;/code&gt; element.&lt;br&gt;
&lt;code&gt;li&lt;/code&gt; Creates a list item and is used with &lt;code&gt;ul&lt;/code&gt;, &lt;code&gt;ol&lt;/code&gt; and &lt;code&gt;menu&lt;/code&gt;&lt;br&gt;
&lt;code&gt;link&lt;/code&gt; Used to connect a document to an external resource such as external stylesheets.&lt;br&gt;
&lt;code&gt;main&lt;/code&gt; Specifies the main content of a document. There can only be one &lt;code&gt;main&lt;/code&gt; element per document.&lt;br&gt;
&lt;code&gt;map&lt;/code&gt; Creates an image map, which is an image with clickable areas. Contains multiple &lt;code&gt;area&lt;/code&gt; elements.&lt;br&gt;
&lt;code&gt;mark&lt;/code&gt; Will define a section of text you want to mark and highlights it.&lt;br&gt;
&lt;code&gt;meta&lt;/code&gt; Specifies all the metadata within the html document, like author, description or keywords. This information is not visible on the page.&lt;br&gt;
&lt;code&gt;meter&lt;/code&gt; Defines a scaled measurement like a gauge or fractional value. Examples are disk usage, query result, etc.&lt;br&gt;
&lt;code&gt;nav&lt;/code&gt; defines a set of navigation links.&lt;br&gt;
&lt;code&gt;noscript&lt;/code&gt; If there are disabled scripts or issues with browser support &lt;code&gt;noscript&lt;/code&gt; allows for alternate content. It can be used in the &lt;code&gt;body&lt;/code&gt; and the &lt;code&gt;head&lt;/code&gt;. If in the &lt;code&gt;head&lt;/code&gt; elements are limited to &lt;code&gt;link&lt;/code&gt; &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;object&lt;/code&gt; Identifies embedded objects in the document such as audio, video, javascript, pdf, other web pages, etc.&lt;br&gt;
&lt;code&gt;ol&lt;/code&gt; specifies an ordered list and can be either numeric or alphabetical. Used with &lt;code&gt;li&lt;/code&gt;&lt;br&gt;
&lt;code&gt;optgroup&lt;/code&gt; used to create groups of data in a dropdown list, each group with its own label.&lt;br&gt;
&lt;code&gt;option&lt;/code&gt; Defines objects in a select list/dropdown. Used with either &lt;code&gt;select&lt;/code&gt; or &lt;code&gt;datalist&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;output&lt;/code&gt; Shows the result of a calculation that is run by a script.&lt;br&gt;
&lt;code&gt;p&lt;/code&gt; Paragraph&lt;br&gt;
&lt;code&gt;param&lt;/code&gt; defines parameters for plugins embedded with &lt;code&gt;object&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;picture&lt;/code&gt; Allows for multiple designed images to be used depending on the browser viewport. You can use &lt;img&gt; or &lt;source&gt; tags with it.&lt;br&gt;
&lt;code&gt;pre&lt;/code&gt; Preformatted text that preserved line breaks and spaces within the html.&lt;br&gt;
&lt;code&gt;progress&lt;/code&gt; Shows the progress as a task.&lt;br&gt;
&lt;code&gt;q&lt;/code&gt;Short quotation.&lt;br&gt;
&lt;code&gt;rp&lt;/code&gt; Creates parentheses around a ruby text, shown by browsers that donâ€™t support ruby annotations.&lt;br&gt;.
&lt;code&gt;rt&lt;/code&gt; gives a ruby annotation that defines an explanation/pronunciation for east asian typography. Used with &lt;code&gt;ruby&lt;/code&gt; and &lt;code&gt;rt&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;ruby&lt;/code&gt; specifies a ruby annotation. Itâ€™s attached to the main text to indicate the pronunciation or meaning on the text. Used with east asian typography.&lt;br&gt;
&lt;code&gt;s&lt;/code&gt; Indicates content is not longer accurate.&lt;br&gt;
&lt;code&gt;samp&lt;/code&gt; Defines sample output from computer program.&lt;br&gt;
&lt;code&gt;script&lt;/code&gt; Where scripts instructions are kept or link to external ones. Used to dynamically create block and/or inline content&lt;br&gt;
&lt;code&gt;section&lt;/code&gt; defines sections of a document like chapters headers or footers.&lt;br&gt;
&lt;code&gt;select&lt;/code&gt; creates a drop down list. Used with &lt;code&gt;option&lt;/code&gt;&lt;br&gt;
&lt;code&gt;small&lt;/code&gt; Defines smaller text or side comments.&lt;br&gt;
&lt;code&gt;source&lt;/code&gt; The source tag is used to indicate multiple media resources like &lt;code&gt;video&lt;/code&gt; &lt;code&gt;audio&lt;/code&gt; and &lt;code&gt;picture&lt;/code&gt;&lt;br&gt;
&lt;code&gt;span&lt;/code&gt; Used to ground inline elements in a document.&lt;br&gt;
&lt;code&gt;strong&lt;/code&gt; is a phrase tag that emphasizes important text.&lt;br&gt;
&lt;code&gt;style&lt;/code&gt; defines style info in the document and specifies how different elements should be styled.&lt;br&gt;
&lt;code&gt;sub&lt;/code&gt; Allows for subscript text which appears half a character below the baseline of text.&lt;br&gt;
&lt;code&gt;summary&lt;/code&gt; creates a visible heading for the &lt;code&gt;details&lt;/code&gt; element.&lt;br&gt;
&lt;code&gt;sup&lt;/code&gt; Allows for subscript text which appears half a character above the baseline of text.&lt;br&gt;
&lt;code&gt;svg&lt;/code&gt; container for svg graphics which has many ways of drawing shapes, lines and images.&lt;br&gt;
&lt;code&gt;table&lt;/code&gt; Creates an HTML table that contains &lt;code&gt;tr&lt;/code&gt; &lt;code&gt;th&lt;/code&gt; and &lt;code&gt;td&lt;/code&gt; and can also be as complex to include &lt;caption&gt; &lt;col&gt; &lt;colgroup&gt; &lt;thread&gt; &lt;tfoot&gt; &lt;tbody&gt;
&lt;code&gt;tbody&lt;/code&gt; Body content in an html table.&lt;br&gt;
&lt;code&gt;td&lt;/code&gt; standard cell within an html table. &lt;br&gt;
&lt;code&gt;template&lt;/code&gt; Allows content to be hidden from the user, and it wonâ€™t be rendered in the browser.&lt;br&gt;
&lt;code&gt;textarea&lt;/code&gt; creates a multiline input control and can hold an unlimited number of characters.&lt;br&gt;
&lt;code&gt;tfoot&lt;/code&gt; groups footer content inside an html table.&lt;br&gt;
&lt;code&gt;th&lt;/code&gt; header cell in an html table.&lt;br&gt;
&lt;code&gt;thead&lt;/code&gt; groups header content inside an html table.&lt;br&gt;
&lt;code&gt;time&lt;/code&gt; human readable date or time. Can also encode dates/times in a machine readable way.&lt;br&gt;
&lt;code&gt;title&lt;/code&gt; title of a document, specified in the &lt;code&gt;head&lt;/code&gt; section in an html document. The content entered here appears in the browser toolbar, creates a title when the page is added to favorites and displays a title in search engine results.&lt;br&gt;
&lt;code&gt;tr&lt;/code&gt; row in an html table.&lt;br&gt;
&lt;code&gt;track&lt;/code&gt; text tracks for media elements, is visible when the media is playing.&lt;br&gt;
&lt;code&gt;u&lt;/code&gt; Used for text that should be stylistically different. Usage should be avoided because its easily confused with a link.&lt;br&gt;
&lt;code&gt;ul&lt;/code&gt; defines an unordered, bulleted list. Each list item is defined by &lt;code&gt;li&lt;/code&gt;&lt;br&gt;
&lt;code&gt;var&lt;/code&gt; phrase tage used to define a variable.&lt;br&gt;
&lt;code&gt;video&lt;/code&gt; defines a video like a movie clip or video streaming. Files supported are .mp4, .ogg, .webm
&lt;/details&gt;
&lt;/section&gt;
</description>
        <pubDate>Fri, 21 Sep 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/blog/post/2018/09/21/htmlelements.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/post/2018/09/21/htmlelements.html</guid>
        
        
        <category>blog</category>
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>Apprenticeship Goals</title>
        <description>&lt;header&gt;
  &lt;h1&gt;Apprenticeship Goals&lt;/h1&gt;
&lt;/header&gt;

&lt;section&gt;
  &lt;p&gt;
  This week I started my design apprenticeship at 8th Light. As I am at the beginning of my journey here, I have some thoughts about how I want to improve during my apprenticeship.
  &lt;/p&gt;

&lt;h2&gt;Where Iâ€™ve been&lt;/h2&gt;
  &lt;p&gt;
  Iâ€™m a native Texan where I come from a traditional graphic design background. I received my undergrad there, and instantly realized I couldn't stand the subjectivity of branding and art direction. My last year there I was fortunate enough to get an introduction to UX by taking some usability and app design courses, which changed everything for me. Shortly after graduating I moved with my (now) wife up to Chicago, where I started working as a Product Designer at Threadless.
  There I got to work in a more generalist environment, doing research, ux, visual design and some front end on a platform called Artist Shops. I loved being able to have that focus on a single product and to have an impact on it through every step of our design process. Since then, Iâ€™ve been a contract UX Designer at some larger fortune 500 corporations, first at United Airlines and most recently at Blue Cross Blue Shield. The work that Iâ€™ve done in the past 2 years has given me valuable experience in conducting ux research, evidence based design, interaction design, accessibility and visual design.
  &lt;/p&gt;

&lt;h2&gt;Where I want to go&lt;/h2&gt;
    &lt;p&gt;
    Iâ€™ve noticed a common frustration in my experience as a designer: bad code limits access between humans and quality user experiences. This is common thing most professionals in the software world can understand. That sense of hopelessness you get as a designer when after months of research, white boarding and prototyping gets de-scoped into something unrecognizable. On the other hand,  developers often get handled a mock-up with zero documentation and functionality
    that doesnâ€™t exist within the current framework. I'm sure there are many reasons why this happens, but in the end, it's hard handoffs between design and development that makes users hate bad software.
    &lt;/p&gt;

    &lt;h4&gt;Front End Development&lt;/h4&gt;
      &lt;p&gt;
      My primary goal is to focus more on front end development,  as I feel it is my weakest area.  I'm competent in building a pretty basic html/css responsive site. I would like to strengthen my skills and knowledge regarding implementation of my code. I'm still very new to GitHub, and specifically would like to understand best practices about file structure, branches and repositories. Iâ€™d also like to get experience workings in component libraries. On the design side, I'm pretty obsessed with pattern libraries, and have even built one myself, but would love to understand the front end side of things as well. I've done extensive work on the design side of accessibility standards but I would like to strengthen my development skills in that area as well.
      &lt;/p&gt;

    &lt;h4&gt;Design&lt;/h4&gt;
      &lt;p&gt;
      In terms of UX and visual design, I'm experienced and confident in many subjects, but there are definitely areas to improve. In the past I've planned, conducted and synthesized user research into UX strategy, but I've never had the opportunity to sit down with stakeholders and define an mvp with feature prioritization. One of the things that won me over during my interview was learning about how designers have impact on a product starting with the first meeting with the client. In addition, I would like to strengthen my skills with content management and strategy. In my past job I did have the  opportunity to work with a content strategist. As designers, we tend to box the &quot;user experience&quot; to just the interface on the screen and we often forget about the words that we use.
      &lt;/p&gt;

    &lt;h2&gt;How I'm going to get there&lt;/h2&gt;
      &lt;p&gt;
        I think the biggest challenge for me is training my brain to think in a different way. Coming from a design background where everything is done is a visual way. This week I began introducing myself to our blog framework which includes understanding the command line and working with ruby. By forcing myself to change my visual right sided brain to think in a more analytical and linear way, I'm making myself extremely uncomfortable, which I couldn't be happier about. Even though I'm putting myself in unfamiliar territory, the people here at 8th Light have been amazing in helping me to work through my blockers quickly and providing me with resources to grow as a professional.
      &lt;/p&gt;
&lt;/section&gt;
</description>
        <pubDate>Fri, 21 Sep 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/jekyll/update/2018/09/21/apprenticeship-goals.html</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2018/09/21/apprenticeship-goals.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
